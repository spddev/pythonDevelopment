import telebot
import config
import random

from telebot import types

bot = telebot.TeleBot(config.TOKEN)

# –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def welcome(message):
    sticker = open('Resources/sticker.webp', 'rb')
    bot.send_sticker(message.chat.id, sticker)

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    # resize_keyboard=True –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É –Ω–∞—Å –±—É–¥–µ—Ç –º–∞–ª–µ–Ω—å–∫–æ–π
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–≤—É—Ö –∫–Ω–æ–ø–æ–∫ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ
    item1 = types.KeyboardButton("üé≤–°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ")
    item2 = types.KeyboardButton("üòä–ö–∞–∫ –¥–µ–ª–∞?")

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    markup.add(item1, item2)

    bot.send_message(message.chat.id,
                     "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á—Ç–æ–±—ã –±—ã—Ç—å –ø–æ–¥–æ–ø—ã—Ç–Ω—ã–º –∫—Ä–æ–ª–∏–∫–æ–º.".format(
                         message.from_user, bot.get_me()),
                     parse_mode='html', reply_markup=markup)

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–æ–º
# –í –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ @bot.message_handler –º—ã —É–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∫–æ–π —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç—É –Ω—É–∂–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å:
# –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ - —ç—Ç–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
@bot.message_handler(content_types=['text'])
def send_message(message):
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∞–∫—Ü–∏–∏ –±–æ—Ç–∞
    # –ï—Å–ª–∏ –ø–æ–ª—É—á–µ–Ω–æ –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if message.chat.type == 'private':
        if message.text == 'üé≤–°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ':
            bot.send_message(message.chat.id, str(random.randint(0, 100)))
        elif message.text == 'üòä–ö–∞–∫ –¥–µ–ª–∞?':

            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–•–æ—Ä–æ—à–æ", callback_data='good')
            item2 = types.InlineKeyboardButton("–ù–µ –æ—á–µ–Ω—å", callback_data='bad')

            markup.add(item1, item2)

            bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, —Å–∞–º –∫–∞–∫ ?', reply_markup=markup)
        else:
            bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é, —á—Ç–æ —Ç–µ–±–µ –æ—Ç–≤–µ—Ç–∏—Ç—å :((')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'good':
                bot.send_message(call.message.chat.id, '–í–æ—Ç –∏ –æ—Ç–ª–∏—á–Ω–µ–Ω—å–∫–æ')
            elif call.data == 'bad':
                bot.send_message(call.message.chat.id, '–ë—ã–≤–∞–µ—Ç...')

            # —É–¥–∞–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="üòä–ö–∞–∫ –¥–µ–ª–∞?",
                                  reply_markup=None)

            # –ø–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                                      text="–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ!!!1111")
    except Exception as e:
        print(repr(e))


# –ó–ê–ü–£–°–ö –ë–û–¢–ê
bot.polling(none_stop=True)